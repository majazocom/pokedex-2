@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #030303;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-jaldi: var(--font-jaldi);
  --font-jersey: var(--font-jersey);
}

/* 
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
} */

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-jaldi), Arial, Helvetica, sans-serif;
}

h1, h2, h3 {
  font-family: var(--font-jersey), Arial, Helvetica, sans-serif;
}

@utility bg-pattern {
  /* https://css-pattern.com/cubes-illusion/ */

  --s: 200px;
  /* control the size*/

  --c1: var(--color-neutral-900);
  --c2: var(--color-neutral-500);
  --c3: var(--color-neutral-700);

  background: repeating-conic-gradient(from 30deg, #0000 0 120deg, var(--c3) 0 50%) calc(var(--s)/2) calc(var(--s)*tan(30deg)/2),
    repeating-conic-gradient(from 30deg, var(--c1) 0 60deg, var(--c2) 0 120deg, var(--c3) 0 50%);
  background-size: var(--s) calc(var(--s)*tan(30deg));
}

.btn-primary {
  @apply p-2 pl-6 pr-6 mt-4 mb-14 cursor-pointer text-xl text-white bg-gradient-to-r from-orange-400 to-red-400 rounded-full font-bold flex items-center justify-center gap-1;
  background-size: 200% auto;
  background-image: linear-gradient(to right, theme("colors.orange.400"), theme("colors.red.400"), theme("colors.orange.400"));
  transition: background-position 0.5s ease;
}

.btn-primary:hover {
  background-position: right center;
}

.text-gradient {
  @apply text-transparent bg-clip-text bg-gradient-to-r from-purple-800 to-blue-800;
}

.badge {
  @apply inline-block px-2 py-0 rounded-full text-sm font-semibold text-white;
}

.cborder-normal {
  @apply border-gray-200;
}

.cborder-fire {
  @apply border-amber-400;
}

.cborder-water {
  @apply border-blue-400;
}

.cborder-electric {
  @apply border-yellow-200;
}

.cborder-grass {
  @apply border-green-400;
}

.cborder-ice {
  @apply border-cyan-100;
}

.cborder-fighting {
  @apply border-red-500;
}

.cborder-poison {
  @apply border-purple-500;
}

.cborder-ground {
  @apply border-yellow-500;
}

.cborder-flying {
  @apply border-indigo-200;
}

.cborder-psychic {
  @apply border-pink-300;
}

.cborder-bug {
  @apply border-lime-400;
}

.cborder-rock {
  @apply border-stone-400;
}

.cborder-ghost {
  @apply border-indigo-600;
}

.cborder-dragon {
  @apply border-indigo-400;
}

.cborder-dark {
  @apply border-gray-600;
}

.cborder-steel {
  @apply border-slate-200;
}

.cborder-fairy {
  @apply border-pink-100;
}

.badge-normal {
  @apply border-gray-200;
}

.badge-fire {
  @apply border-amber-400;
}

.badge-water {
  @apply border-blue-400;
}

.badge-electric {
  @apply border-yellow-200;
}

.badge-grass {
  @apply border-green-400;
}

.badge-ice {
  @apply border-cyan-100;
}

.badge-fighting {
  @apply border-red-500;
}

.badge-poison {
  @apply border-purple-500;
}

.badge-ground {
  @apply border-yellow-500;
}

.badge-flying {
  @apply border-indigo-200;
}

.badge-psychic {
  @apply border-pink-300;
}

.badge-bug {
  @apply border-lime-400;
}

.badge-rock {
  @apply border-stone-400;
}

.badge-ghost {
  @apply border-indigo-600;
}

.badge-dragon {
  @apply border-indigo-400;
}

.badge-dark {
  @apply border-gray-700;
}

.badge-steel {
  @apply border-slate-200;
}

.badge-fairy {
  @apply border-pink-100;
}

/* breakout */
/* see https://www.youtube.com/watch?v=c13gpBrnGEw */
/* TODO: make tailwind utility */
.content-grid {
  --spacing-xl: 4rem;
  --spacing-lg: 2rem;
  --spacing-md: 1rem;
  --spacing-sm: .5rem;
  --spacing-xs: .25rem;

  --content-max-width: 56.25rem;
  --breakout-max-width: 75rem;
  --padding-inline: var(--spacing-md);
  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2),
      var(--content-max-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid> :not(.breakout, .full-width),
.full-width> :not(.breakout, .full-width) {
  grid-column: content;
}

.content-grid>.breakout {
  grid-column: breakout;
}

.content-grid>.full-width {
  grid-column: full-width;

  display: grid;
  grid-template-columns: inherit;
}